services:
  api-gateway:
    container_name: gateway
    build: ./api-gateway
    volumes:
      - ./api-gateway/src:/usr/app/src
    ports:
      - "${PORT_API_GATEWAY}:3000"

  authentication-service:
    container_name: gateway
    build: ./api-gateway
    volumes:
      - ./api-gateway/src:/usr/app/src
    ports:
      - "${PORT_API_GATEWAY}:3000"

  database:
    image: postgres:15-alpine
    container_name: database_container
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASWORD}
      POSTGRES_DB: ${DATABASE_DB}
    volumes:
      - ./bd/data:/var/lib/postgresql/data
    networks:
      - postgres_network

  database_backup:
    image: postgres:15-alpine
    container_name: database_backup
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASWORD}
      POSTGRES_DB: ${DATABASE_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./bd/backups:/backups
    networks:
      - postgres_network
    depends_on:
      - database
    command: >
      sh -c "
      while true; do
        pg_dump -h postgres -U $POSTGRES_USER $POSTGRES_DB > /bd/backup_$(date +%Y%m%d_%H%M%S).sql &&
        echo 'Backup completed at $(date)';
        sleep 86400; # 24 horas
      done
      "

networks:
  postgres_network:
    driver: bridge